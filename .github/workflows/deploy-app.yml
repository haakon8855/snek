name: App deploy

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/deploy-app.yml'
      - 'src/**'
  workflow_dispatch:
    
permissions: 
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    outputs: 
      version: ${{ steps.semantic.outputs.version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '9.x'
          include-prerelease: true
      
      - name: Semantic version
        id: semantic
        uses: paulhatch/semantic-version@v5.4.0
        with:
          tag_prefix: "v"
          version_format: "v${major}.${minor}.${patch}"
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          bump_each_commit: false
          enable_prerelease_mode: false
          search_commit_body: true
      
      - name: Create Git tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag "${{ steps.semantic.outputs.version }}"
          git push origin "${{ steps.semantic.outputs.version }}"

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: Generate EF migration script
        run: |
          dotnet tool install --global dotnet-ef
          dotnet ef migrations script --idempotent --no-build --configuration Release --project ./src/Web/Web.csproj --output ${{env.DOTNET_ROOT}}/migrations.sql --verbose

      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/snek-app

      - name: Upload EF migration script artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: dbmigrationscript
          path: ${{env.DOTNET_ROOT}}/migrations.sql

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: snekapp
          path: ${{env.DOTNET_ROOT}}/snek-app

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        id: download-artifact
        uses: actions/download-artifact@v4
        with:
          name: snekapp 

      - name: Download EF migration script artifact from build job
        id: download-migration-script
        uses: actions/download-artifact@v4
        with:
          name: dbmigrationscript

      - name: Update DB using SQL script
        uses: azure/sql-action@v2.2
        with:
          connection-string: ${{ secrets.DB_CONNECTION_STRING }}
          path: ${{ steps.download-migration-script.outputs.download-path }}/migrations.sql
          action: "publish"

      - name: App settings variable substitution
        uses: microsoft/variable-substitution@v1
        with:
          files: "${{ steps.download-artifact.outputs.download-path }}/appsettings.json"
        env:
          ConnectionStrings.DefaultConnection: ${{ secrets.DB_CONNECTION_STRING }}
          AppVersion: ${{ needs.build.outputs.version }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'snek-game'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_1FB9D4E4837244188F886E967968C2C2 }}
          package: .

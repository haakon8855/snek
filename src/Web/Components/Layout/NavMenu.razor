@implements IDisposable

@inject NavigationManager NavigationManager
@inject IConfiguration Configuration

<div class="top-row ps-3 navbar navbar-dark pt-1">
    <div class="d-flex justify-content-start align-items-center ps-2">
        <img src="logo.png" alt="logo" height="32px"/>
        <a class="navbar-brand ps-3" style="font-size: 24px;" href="">Snek</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler"/>

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Play Snek
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="best-sneks">
                <span class="bi bi-list-stars-nav-menu" aria-hidden="true"></span> Best Sneks
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="stats">
                <span class="bi bi-clipboard-data-nav-menu" aria-hidden="true"></span> Stats
            </NavLink>
        </div>

        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Manage">
                        <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> @context.User.Identity?.Name
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken/>
                        <input type="hidden" name="ReturnUrl" value="@_currentUrl"/>
                        <button type="submit" class="nav-link">
                            <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                        </button>
                    </form>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Register">
                        <span class="bi bi-person-nav-menu" aria-hidden="true"></span> Register
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Login">
                        <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </nav>

    <div class="position-absolute start-0 bottom-0 m-2 text-white-50" style="font-size: 1rem;">
        <div class="d-flex align-items-center mb-1" title="Build version">
            <i class="bi bi-tag-fill me-1"></i>
            <span class="align-middle text-white-50 font-monospace">
                @_appVersion
            </span>
        </div>
        <a href="https://github.com/haakon8855/snek"
           target="_blank"
           class="d-flex align-items-center text-white-50 text-decoration-none"
           title="View source on GitHub"
        >
            <i class="bi bi-github me-1"></i>
            <span class="font-monospace">snek</span>
        </a>
    </div>

</div>


@code {
    
    private string? _currentUrl;
    private string? _appVersion;

    protected override void OnInitialized()
    {
        _currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
        _appVersion = string.IsNullOrWhiteSpace(Configuration?["AppVersion"]) ? "localhost" : Configuration["AppVersion"];
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        _currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

}

